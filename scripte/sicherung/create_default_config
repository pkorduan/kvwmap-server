#!/bin/bash

function write_csv_config(){
	if [ -d /home/gisadmin/www ]; then
		TAEGLICH_DIR="/home/gisadmin/www/sicherungen/taeglich_default"
		mkdir -p "$TAEGLICH_DIR"
		cd "$TAEGLICH_DIR"
		echo "BACKUP_PATH=/home/gisadmin/Sicherungen/taeglich"		>> backup.conf
		echo "BACKUP_FOLDER=\$(date +%Y)/\$(date +%m)/\$(date +%d)"	>> backup.conf
		echo "KEEP_FOR_N_DAYS=7"					>> backup.conf
		echo "PROD_APP=kvwmap"						>> backup.conf
		echo "/home/gisadmin/www/apps;apps.tar.gz;"			>> dirs.conf
		echo "/home/gisadmin/www/data;data.tar.gz;"			>> dirs.conf
		echo "/etc;root_etc.tar.gz;"					>> dirs.conf
		echo "kvwmapdb;kvwmapdb.dump"					>> mysql_dbs.conf
		docker exec pgsql-server bash -c "psql -U kvwmap -d kvwmapsp -t -c \"select distinct datname from pg_catalog.pg_database where datname not like 'template%';\"" | xargs -I {} echo "{};{}.dump" >> pg_dbs.conf
		echo "Standard-Konfiguration für tägliches Backup nach $TAEGLICH_DIR geschrieben."
	else
		echo "/home/gisadmin/www nicht gefunden"
	fi
}

function write_json_config(){
	BACKUP_FILENAME="default_backup.json"
#	if [ -d /home/gisadmin/www ]; then
	if [ 1=1 ]; then
		BACKUP_CONFIG_DIR=$(pwd)
#		mkdir $BACKUP_CONFIG_DIR
		cd $BACKUP_CONFIG_DIR
		echo '{
  "name": "tägliche Sicherung",
  "id":"",
  "beschreibung":"",
  "cron_interval":"",
  "backup_path": "/home/gisadmin/Sicherungen",
  "backup_folder": "date +%Y_%m_%d",
  "delete_after_n_days": "7",
' >> $BACKUP_FILENAME

		#tar
		echo '"tar": ['  >> $BACKUP_FILENAME
		echo '{"source":"/home/gisadmin/www/apps","target_name":"apps.tar","differential_duration":"7"},' >> $BACKUP_FILENAME
		echo '{"source":"/home/gisadmin/www/data","target_name":"data.tar","differential_duration":"7"},' >> $BACKUP_FILENAME
         	echo '{"source":"/etc","target_name":"root_etc.tar","differential_duration":"7"},' >> $BACKUP_FILENAME
		echo '{"source":"/home/gisadmin/etc","target_name":"gisadmin_etc.tar","differential_duration":"7"}' >> $BACKUP_FILENAME
		echo '],' >> $BACKUP_FILENAME

		#mysql
                source /home/gisadmin/kvwmap-server/config/config
                local MYSQLUSER=$(grep MYSQL_USER /home/gisadmin/www/apps/"$PROD_APP"/credentials.php | cut -d "'" -f 4)
                local MYSQLPW=$(grep MYSQL_PASSWORD /home/gisadmin/www/apps/"$PROD_APP"/credentials.php | cut -d "'" -f 4)

                echo "mysql_host=$mysql_host"
                echo "MYSQLUSER=$MYSQLUSER"
                echo "MYSQLPW=$MYSQLPW"


		echo '"mysql_dump": [' >> $BACKUP_FILENAME
                while read MYDB
                do
		    echo "{\"container_id\":\"mysql-server\",\"db_name\":\"$MYDB\",\"target_name\":\"$MYDB.dump\"}," >> $BACKUP_FILENAME
                done < <(docker exec mysql-server bash -c "mysql -u $MYSQLUSER -p$MYSQLPW -Ns -e 'show databases;'")
		echo '],' >> $BACKUP_FILENAME

		#postgresql
		echo '"pg_dump": [' >> $BACKUP_FILENAME
		while read PGDB
		do
			echo "{\"container_id\":\"pgsql-server\",\"db_user\":\"kvwmap\",\"db_name\":\"$PGDB\",\"target_name\":\"${PGDB}.dump\"}," >> $BACKUP_FILENAME
		done < <(docker exec pgsql-server bash -c "psql -U kvwmap -d kvwmapsp -t -c \"select distinct datname from pg_catalog.pg_database where datname not like 'template%';\"")
		echo '{}' >> $BACKUP_FILENAME #quickfix für letztes Komma
		echo '],' >> $BACKUP_FILENAME

		#pg_dumpall
		echo '"pg_dumpall":[' >> $BACKUP_FILENAME
		echo '{"container_id":"pgsql-server",' >> $BACKUP_FILENAME
		echo '"db_user":"kvwmap",' >> $BACKUP_FILENAME
		echo '"db_name":"kvwmapsp",' >> $BACKUP_FILENAME
		echo '"target_name":"schema_rollen.dump",' >> $BACKUP_FILENAME
		echo '"pg_dumpall_parameter":"--globals-only"}' >> $BACKUP_FILENAME
		echo '],' >> $BACKUP_FILENAME

		#rsync
		echo '"rsync": [' >> $BACKUP_FILENAME
#		#echo '{"source":"","destination":"","parameter":""}' >> $BACKUP_FILENAME
		echo ']' >> $BACKUP_FILENAME

		echo '}' >> $BACKUP_FILENAME

	else
		echo 'backup dir does not exist'
	fi

}

convert_to_json(){
    BACKUP_FILENAME="taegliche_sicherung.json"
    CONFIG_PATH=$1
    source $CONFIG_PATH/backup.conf


    echo '{
  "name": "tägliche Sicherung",
  "id":"",
  "beschreibung":"",
  "cron_interval":"",
  "backup_path": "/home/gisadmin/Sicherungen/taeglich",
  "backup_folder": "date +%Y_%m_%d",
  "delete_after_n_days": "7",
' >> $BACKUP_FILENAME

    #TAR
    echo '"tar": [' >> $BACKUP_FILENAME
    while read line
    do
        source=$(echo "$line" | cut -d ";" -f 1)
        target=$(echo "$line" | cut -d ";" -f 2)
        echo "{\"source\":\"$source\",\"target_name\":\"$target\",\"differential_duration\":\"7\"}," >> $BACKUP_FILENAME
    done<$CONFIG_PATH/dirs.conf
    echo '{}' >> $BACKUP_FILENAME
    echo '],' >> $BACKUP_FILENAME

    #mysql
    echo '"mysql": [' >> $BACKUP_FILENAME
    while read line
    do
        db_name=$(echo "$line" | cut -d ";" -f 1)
        target=$(echo "$line" | cut -d ";" -f 2)
        echo "{\"container_id\":\"mysql-server\",\"db_name\":\"$db_name\",\"target_name\":\"$target\"}," >> $BACKUP_FILENAME
    done<$CONFIG_PATH/mysql_dbs.conf
    echo '{}' >> $BACKUP_FILENAME
    echo '],' >> $BACKUP_FILENAME

    #pg_dump
    echo '"pg_dump": [' >> $BACKUP_FILENAME
    while read line
    do
        database=$(echo "$line" | cut -d ";" -f 1)
        target_name=$(echo "$line" | cut -d ";" -f 2)
        pgdump_options=$(echo "$line" | cut -d ";" -f 3)

        echo "{\"container_id\":\"pgsql-server\",\"db_user\":\"kvwmap\",\"db_name\":\"$database\",\"target_name\":\"$target_name}\"}," >> $BACKUP_FILENAME
    done<pg_dbs.conf
    echo '{}' >> $BACKUP_FILENAME
    echo '],' >> $BACKUP_FILENAME

    #pg_dumpall
    echo '"pg_dumpall":[' >> $BACKUP_FILENAME
    echo '{"container_id":"pgsql-server",' >> $BACKUP_FILENAME
    echo '"db_user":"kvwmap",' >> $BACKUP_FILENAME
    echo '"db_name":"kvwmapsp",' >> $BACKUP_FILENAME
    echo '"target_name":"schema_rollen.dump",' >> $BACKUP_FILENAME
    echo '"pg_dumpall_parameter":"--globals-only"}' >> $BACKUP_FILENAME
    echo '],' >> $BACKUP_FILENAME

    #rsync
    echo '"rsync": [' >> $BACKUP_FILENAME
    #echo '{"source":"","destination":"","parameter":""}' >> $BACKUP_FILENAME
    echo ']' >> $BACKUP_FILENAME

    echo '}' >> $BACKUP_FILENAME


}

function json_rsync(){
(
cat << eof
{
  "name": "woechentliche Sicherung",
  "id":"",
  "beschreibung":"",
  "cron_interval":"",
  "backup_path": "/home/gisadmin/Sicherungen/woechentlich",
  "backup_folder": "date +%Y_%m_%d",
  "delete_after_n_days": "30",

"tar": [
],
"mysql_dump": [
],
"pg_dump": [
],
"pg_dumpall":[
],
"rsync": [
{"source":"/home/gisadmin/Sicherungen/woechentlich/latest","destination":"","parameter":""}
]
}
eof
) >> rsync_sicherung.json 

}

function crond(){

(
cat << eof
SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
#taeglich um 1 Uhr
0 1 * * * root /home/gisadmin/Sicherungen/scripte/backup_json.sh 
#woechentlich, Freitags 2 Uhr
0 2 * * 5 root /home/gisadmin/Sicherungen/scripte/backup_json.sh 
eof
) >> gdi_sicherung

}

case $1 in
	json)
		write_json_config
	;;
        rsync)
                json_rsync
        ;;
        convert)
               convert_to_json $2
        ;;
        cron)
            crond
        ;;
	*)
            echo "json"
            echo "rsync"
            echo "convert"
            echo "cron"
	;;
esac
