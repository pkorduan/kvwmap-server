#!/bin/bash
#echo "Load variables in dcm bucardo"
CARGOS+=("bucardo")

usage_bucardo() {
  echo "install bucardo  Installiert ein bucardo Image."
  echo "rerun bucardo    Stoppt, löscht, erzeugt und startet nur den Container bucardo."
  echo "run bucardo      Erzeugt und startet nur den Container bucardo."
  echo "start bucardo    Startet nur den Container bucardo."
  echo "status bucardo   Zeigt den aktuellen Status des Container bucardo an."
  echo "stop bucardo     Startet nur den Container bucardo."
  echo "uninsall bucardo Deinstalliert das bucardo image und die dazugehörigen lokalen Ressourcen auf dem Hostrechner."
}

install_bucardo() {
  source $USER_DIR/kvwmap-server/cargo-available/bucardo/env_and_volumes
  echo "Installiere bucardo ..."
  
  echo "
Lege Konfig-Verzeichnis für bucardo unter $USER_DIR an."
  mkdir -p $BUCARDO_CONF_DIR
  chown $OS_USER.$OS_USER $BUCARDO_CONF_DIR
  chmod g+w $BUCARDO_CONF_DIR

  echo "
Kopiere Konfigurationsdatei für bucardo."
  echo "cp $USER_DIR/kvwmap-server/cargo-available/bucardo/env_and_volumes => $BUCARDO_CONF_DIR/env_and_volumes"
  cp $USER_DIR/kvwmap-server/cargo-available/bucardo/env_and_volumes $BUCARDO_CONF_DIR/env_and_volumes
  chown $OS_USER.$OS_USER $BUCARDO_CONF_DIR/env_and_volumes
  chmod g+w $BUCARDO_CONF_DIR/env_and_volumes

  echo "
Lege Log-Verzeichnis für bucardo unter $WWW_ROOT/logs/ an."
  mkdir -p $WWW_ROOT/logs/bucardo
  chown $OS_USER.$OS_USER $WWW_ROOT/logs/bucardo
  chmod g+w $WWW_ROOT/logs/bucardo

  echo "
Ziehe Image $BUCARDO_IMAGE von dockerhub"
  docker pull $BUCARDO_IMAGE:$BUCARDO_IMAGE_VERSION

  echo "Der bucardo container kann nun gestartet werden mit dem Befehl:"
  echo "dcm run bucardo"
}

remove_bucardo_container() {
  stop_bucardo_container

  if [ "$(docker ps -a -q -f name=bucardo -f status=exited)" ] ; then
    echo "Lösche Container ..."
    docker rm bucardo
  else
    echo "Container bucardo kann nicht gelöscht werden, weil er nicht existiert."
  fi
}

remove_bucardo_image() {
  echo "Lösche bucardo Image: $BUCARDO_IMAGE"
  docker rmi $BUCARDO_IMAGE
}

run_bucardo_container() {
  source $USER_DIR/etc/bucardo/env_and_volumes
  echo "Erzeuge und starte den bucardo Container"
  echo "mit Image: ${BUCARDO_IMAGE}:${BUCARDO_IMAGE_VERSION}"
  echo "mit volumes: ${bucardo_volumes}"
  docker run --name bucardo \
    -h ${SERVER_NAME}-bucardo-container \
    --link pgsql-server:pgsql \
    $bucardo_volumes \
    $bucardo_env_vars \
    -it $BUCARDO_IMAGE:$BUCARDO_IMAGE_VERSION \
    /bin/bash
#    --restart=always \
#    -d $BUCARDO_IMAGE:$BUCARDO_IMAGE_VERSION
}

set_bucardo_web_link() {
  echo "Für bucardo wird kein Web-Link im Web-Container gesetzt."
}

show_status() {
  echo "Status of container $COINTAINER_NAME"
}

start_bucardo_container() {
  echo "Starte bucardo Container. Bitte warten ..."
  docker start bucardo
}

stop_bucardo_container() {
  if [ "$(docker ps -a -q -f name=bucardo -f status=running)" ] ; then
    echo "Stoppe Container. Bitte warten ..."
    docker stop bucardo
  else
    echo "Container bucardo kann nicht gestoppt werden, weil er nicht läuft."
  fi
}

uninstall_bucardo() {
  remove_bucardo_container
  
  echo "Dieser Befehl deinstalliert das image $BUCARDO_IMAGE und auf Nachfrage alle dazugehörigen auf diesem Host gespeicherten Daten, die bucardo genutzt hat."
  read -p "Wollen Sie das Image wirklich deinstallieren? (j/n)? " answer
  case ${answer:0:1} in
    j|J )
      docker rmi $BUCARDO_IMAGE:$BUCARDO_IMAGE_VERSION

      echo "Lösche bucardo env_and_volumes Konfiguration in etc."
      rm -R $USER_DIR/etc/bucardo

      echo "So jetzt ist bucardo weg."
      echo "Zum neu installieren nach ${USER_DIR} wechseln und folgenden Befehle eingeben:"
      echo "$ dcm install bucardo"
      echo "$ dcm run bucardo"
    ;;
    * )
      echo "OK, nix passiert!"
    ;;
  esac
}

cases_bucardo() {
  case_found=true
  case "$1" in
    console)
      case $2 in
        bucardo)
          echo "Öffne ein Terminal im Container in dem der bucardo läuft ..."
          docker exec -it bucardo /bin/bash
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    install)
      case $2 in
        bucardo)
          install_bucardo
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    ip)
      case $2 in
        bucardo)
          show_container_ip $2
        ;;
        * )
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    uninstall)
      debug "Case uninstall in bucardo"
      case $2 in
        bucardo)
          #echo "Case bucardo"
          uninstall_bucardo
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    remove)
      debug "Case remove in bucardo"
      case $2 in
        bucardo)
          remove_bucardo_container
        ;;
        * )
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    rerun)
      debug "Case rerun in bucardo"
      case $2 in
        bucardo)
          remove_bucardo_container
          run_bucardo_container
          docker ps
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    run)
      debug "Case run in bucardo"
      case $2 in
        bucardo)
          run_bucardo_container
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    start)
      debug "Case start in bucardo"
      case $2 in
        bucardo)
          start_bucardo_container
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    status)
      case $2 in
        bucardo)
          show_container_status "bucardo"
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    stop)
      debug "Case stop in bucardo"
      case $2 in
        bucardo)
          stop_bucardo_container
        ;;
        *)
          debug "No subcase $2 in bucardo"
          case_found=false
        ;;
      esac
    ;;

    *)
      #echo "No case found in dcm bucardo"
      case_found=false
    ;;
  esac
  debug "Case found after cases bucardo: $case_found"
}