#!/bin/bash

install_service() {

  echo "Installation von Service pgsql15 in Netzwerk '${NETWORK_NAME}'"
  SERVICE_NAME=pgsql15

  echo "Service-Name: ${SERVICE_NAME}"

  SERVICE_PATH=${USER_DIR}/networks/${NETWORK_NAME}/services/${SERVICE_NAME}/
  if [ -d "$SERVICE_PATH" ]; then
    echo "Der Service existiert in dem Netzwerk bereits. Starten Sie erneut und wählen Sie einen anderen Namen!"
    return 1
  fi

  if  [ -z "$POSTGRES_PASSWORD" ]; then
    read -p "Passwort für User postgres: " -s POSTGRES_PASSWORD
  fi
  echo "POSTGRES_PASSWORD=\"${POSTGRES_PASSWORD}\"" >> ${USER_DIR}/networks/${NETWORK_NAME}/env

  read -p "Soll für PostgreSQL eine Migration aus einem alten Cluster vorgenommen werden? [j|n]: " migration_jn
  if [ "$migration_jn" = "j" ]; then
    read -p "Pfad zur alten .pgpass: " PGPASSFILE
    read -p "Hinweis: .pgpass Nutzer postgres braucht Zugang zu DB postgres! [press the  'any' key to continue]"
    read -p "Pfad zum Dump-Ordner: " PGDUMPPATH
    cp "$PGPASSFILE" "$SERVICE_PATH"/config/
    ln -s "$PGDUMPPATH" "$SERVICE_PATH"/
    migration_jn=
  fi

  mkdir -p ${SERVICE_PATH}
  cp -r ${USER_DIR}/kvwmap-server/service-templates/pgsql15/directory_template/* ${SERVICE_PATH}
  cp    ${USER_DIR}/kvwmap-server/service-templates/pgsql15/compose-template.yml ${SERVICE_PATH}
  mkdir ${SERVICE_PATH}/data
  mkdir ${SERVICE_PATH}/backup
  mkdir ${SERVICE_PATH}/logs


  chown -R 999.gisadmin ${SERVICE_PATH}

  export SERVICE_NAME

  echo "Installation von ${SERVICE_NAME} in ${NETWORK_NAME} beendet."
}
