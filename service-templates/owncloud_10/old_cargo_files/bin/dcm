#!/bin/bash
#echo "Load variables in dcm owncloud"
CARGOS+=("owncloud_10.0.10")

source $USER_DIR/kvwmap-server/owncloud_10.0.10/etc/owncloud_10.0.10/version

usage_owncloud_10.0.10() {
  echo "install owncloud_10.0.10  Installiert die Komponenten für die Verwendung eines owncloud Containers."
  echo "rerun owncloud_10.0.10    Stoppt, löscht, erzeugt und startet nur den Container owncloud."
  echo "run owncloud_10.0.10      Erzeugt und startet nur den Container owncloud."
  echo "start owncloud_10.0.10    Startet nur den Container owncloud."
  echo "status owncloud_10.0.10   Zeigt den aktuellen Status des Container owncloud an."
  echo "stop owncloud_10.0.10     Startet nur den Container owncloud."
  echo "uninsall owncloud_10.0.10 Deinstalliert das owncloud image und die dazugehörigen lokalen Ressourcen auf dem Hostrechner."
}

install_owncloud_10.0.10() {
  echo "nicht implementiert"
}

remove_owncloud_10.0.10_container() {
  stop_owncloud_10.0.10_container

  if [ "$(docker ps -a -q -f name=owncloud_${owncloud_VERSION} -f status=exited)" ] ; then
    echo "Lösche Container ..."
    docker rm owncloud_${owncloud_VERSION}
  else
    echo "Container owncloud kann nicht gelöscht werden, weil er nicht existiert."
  fi
}

remove_owncloud_10.0.10_image() {
  echo "Lösche owncloud Image: ${owncloud_IMAGE}:${owncloud_VERSION}"
  docker rmi "${owncloud_IMAGE}:${owncloud_VERSION}"
}

run_owncloud_10.0.10_container() {
  source $USER_DIR/etc/owncloud_10.0.10/env_and_volumes

  create_bridge_network

  echo "Erzeuge und starte den owncloud Container:"
  cmd="docker run\
    --name owncloud_${owncloud_VERSION}\
    -h ${SERVER_NAME}-owncloud-container\
    --network=${network_name}\
    --net-alias=owncloud_10.0.10\
    $owncloud_volumes\
    $owncloud_env_vars\
    --restart=always\
    -d ${owncloud_IMAGE}:${owncloud_VERSION}\
  "
  echo $cmd
  $cmd
}

show_status() {
  echo "Status of container $COINTAINER_NAME"
}

start_owncloud_10.0.10_container() {
  echo "Starte owncloud_${owncloud_VERSION} Container. Bitte warten ..."
  docker start owncloud_${owncloud_VERSION}
}

stop_owncloud_10.0.10_container() {
  if [ "$(docker ps -a -q -f name=owncloud_${owncloud_VERSION} -f status=running)" ] ; then
    echo "Stoppe Container. Bitte warten ..."
    docker stop owncloud_${owncloud_VERSION}
  else
    echo "Container owncloud_${owncloud_VERSION} kann nicht gestoppt werden, weil er nicht läuft."
  fi
}

uninstall_owncloud_10.0.10() {
  echo "Dieser Befehl stopt und löscht den owncloud Container und deinstalliert das Image ${owncloud_IMAGE}:${owncloud_VERSION} und auf Nachfrage alle dazugehörigen auf diesem Host gespeicherten Daten, die owncloud genutzt hat, außer falls verwendet die MySQL-Datenbank und den Nutzer."
  read -p "Wollen Sie das Image wirklich deinstallieren? (j/n)? " answer
  case ${answer:0:1} in
    j|J )
      remove_owncloud_10.0.10_container
      remove_owncloud_10.0.10_image
    ;;
    * )
      echo "OK, nix passiert!"
    ;;
  esac
}

cases_owncloud_10.0.10() {
  case_found=true
  case "$1" in
    console)
      case $2 in
        owncloud_10.0.10)
          echo "Öffne ein Terminal im Container in dem der owncloud_${owncloud_VERSION} läuft ..."
          docker exec -it owncloud_${owncloud_VERSION} /bin/bash
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.1"
          case_found=false
        ;;
      esac
    ;;

    install)
      case $2 in
        owncloud_10.0.10)
          install_owncloud_10.0.10
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    ip)
      case $2 in
        owncloud_10.0.10)
          show_container_ip $2
        ;;
        * )
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    uninstall)
      debug "Case uninstall in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          #echo "Case owncloud"
          uninstall_owncloud_10.0.10
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    rm)
      debug "Case remove in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          remove_owncloud_10.0.10_container
        ;;
        * )
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    rerun)
      debug "Case rerun in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          remove_owncloud_10.0.10_container
          run_owncloud_10.0.10_container
          docker ps
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    run)
      debug "Case run in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          run_owncloud_10.0.10_container
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    start)
      debug "Case start in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          start_owncloud_10.0.10_container
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    status)
      case $2 in
        owncloud_10.0.10)
          show_container_status "owncloud_${owncloud_VERSION}"
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    stop)
      debug "Case stop in owncloud_10.0.10"
      case $2 in
        owncloud_10.0.10)
          stop_owncloud_10.0.10_container
        ;;
        *)
          debug "No subcase $2 in owncloud_10.0.10"
          case_found=false
        ;;
      esac
    ;;

    *)
      #echo "No case found in dcm owncloud_10.0.10"
      case_found=false
    ;;
  esac
  debug "Case found after cases owncloud: $case_found"
}
