#!/bin/bash
KVWMAP_IMAGE=pkorduan/kvwmap-server
KVWMAP_IMAGE_VERSION="2.2.0"
TERM=linux
COLUMNS=80
LINES=120

read -s -p "Enter password for kvwmap user: " KVWMAP_INIT_PASSWORD

HTTP_PROXY_WEB=
NO_PROXY_WEB=localhost,pgsql
NETWORK=KVWMAP_PROD
NETWORK_ALIAS=web

IP_EXTERN=$(ip addr | grep "inet " | grep -v 127.0.0.1 | grep -v docker | cut -d ' ' -f 6 | cut -d '/' -f 1)

if [ -f $USER_DIR/etc/apache2/domain ]; then
  DOMAIN_EXTERN=$(head -n 1 $USER_DIR/etc/apache2/domain)
fi

web_hosts="--add-host=$DOMAIN_NAME:${IP_EXTERN} \
           --add-host=$SERVER_NAME:${IP_EXTERN}"

web_ports="-p 80:80 \
           -p 443:443"

web_env_vars="-e OS_USER=$OS_USER \
              -e IP_EXTERN=$IP_EXTERN \
              -e DOMAIN_EXTERN=$DOMAIN_EXTERN \
              -e KVWMAP_INIT_PASSWORD=$KVWMAP_INIT_PASSWORD \
              -e POSTGRES_ROOT_PASSWORD=$POSTGRES_ROOT_PASSWORD \
              -e http_proxy=$HTTP_PROXY_WEB \
              -e no_proxy=localhost,${IP_EXTERN} \
              -e \"TERM=${TERM}\" \
              -e \"COLUMNS=${COLUMNS}\" \
              -e \"LINES=${LINES}\""

web_volumes=" -v $WWW_ROOT:/var/www \
              -v $USER_DIR/etc/postgresql/.pgpass:/root/.pgpass \
              -v $USER_DIR/etc/apache2/sites-available:/etc/apache2/sites-available \
              -v $USER_DIR/etc/apache2/sites-enabled:/etc/apache2/sites-enabled \
              -v $USER_DIR/etc/apache2/ssl:/etc/apache2/ssl \
              -v $USER_DIR/etc/apache2/letsencrypt:/etc/letsencrypt \
              -v $USER_DIR/etc/web/kvwmap_hourly:/etc/cron.hourly/load_gisadmin_cron_file \
              -v $USER_DIR/etc/web/kvwmap_monthly:/etc/cron.monthly/renew-certbot-auto \
              -v $USER_DIR/etc/php/7.3:/etc/php/7.3 \
              -v $USER_DIR/etc/phpmyadmin/config.inc.php:/srv/www/phpmyadmin/config.inc.php \
              -v $USER_DIR/etc/proj/epsg:/usr/share/proj/epsg \
              -v $USER_DIR/etc/proj/MVTR2010.gsb:/usr/share/proj/MVTR2010.gsb \
              -v $USER_DIR/etc/proj/MVTRS4283.gsb:/usr/share/proj/MVTRS4283.gsb \
              -v /var/run/docker.sock:/var/run/docker.sock"
